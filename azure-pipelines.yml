name: MeetAI-pipeline

variables:
  pulumiStack: 'pklaudat/usp-meeting-summz/prod'
  infraPath: 'infrastructure'
  appPath: 'functions'
  azureFunctionsCoreToolsVersion: '4'

pool:
  name: 'self-hosted-agentpool'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    projects: $(infraPath)
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build Infrastructure Code'
  inputs:
    command: 'build'
    projects: $(infraPath)

- task: Pulumi@1
  displayName: 'Pulumi Preview'
  condition: and(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/main'))
  inputs:
    azureSubscription: $(az-id)
    command: 'preview'
    cwd: $(infraPath)
    stack: $(pulumiStack)

- task: Pulumi@1
  displayName: 'Pulumi Deploy'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  inputs:
    azureSubscription: $(az-id)
    command: 'up'
    cwd: $(infraPath)
    stack: $(pulumiStack)
    args: '--yes'
  name: 'pulumi'

- powershell: |
    $functionAppName = pulumi stack output FunctionName
    Write-Output "##vso[task.setvariable variable=functionAppName]$functionAppName"
  displayName: 'Retrieve function name using Pulumi deployment'
  continueOnError: false
  workingDirectory: $(infraPath)

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet Packages for App folder'
  inputs:
    command: 'restore'
    projects: $(appPath)
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build Azure Functions Code'
  inputs:
    command: 'build'
    projects: $(appPath)

- powershell: |
    Write-Output "Installing Azure Functions Core Tools..."
    npm install -g azure-functions-core-tools@$(azureFunctionsCoreToolsVersion)
  displayName: 'Install Azure Functions Core Tools'
  continueOnError: false
  workingDirectory: $(appPath)

- powershell: |
    Write-Output "Deploying Azure Functions..."
    func azure functionapp publish $env:functionAppName --overwrite --dotnet-isolated
  displayName: 'Deploy Azure Functions Code'
  continueOnError: false
  workingDirectory: $(appPath)




